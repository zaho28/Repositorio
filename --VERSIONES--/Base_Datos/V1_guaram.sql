-- MySQL Script generated by MySQL Workbench
-- Tue Sep  2 11:49:53 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema gurama
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gurama
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gurama` DEFAULT CHARACTER SET utf8mb4 ;
USE `gurama` ;

-- -----------------------------------------------------
-- Table `gurama`.`comprobante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`comprobante` ;

CREATE TABLE IF NOT EXISTS `gurama`.`comprobante` (
  `id_comprobante` INT(6) NOT NULL COMMENT 'PK identificador del comprobante es dato unico',
  `img_comprobante` LONGBLOB NULL DEFAULT NULL COMMENT 'Guarda la imagen que sube el usuario del comprobante de pago',
  PRIMARY KEY (`id_comprobante`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`tipo_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`tipo_pedido` ;

CREATE TABLE IF NOT EXISTS `gurama`.`tipo_pedido` (
  `id_tipo` VARCHAR(4) NOT NULL COMMENT 'PK valor unico de la tabla pedido que ayuda a identificar que tipo de pedido es',
  `tipo_pedido` VARCHAR(10) NULL DEFAULT NULL COMMENT 'describe el tipo de pedido (personalizado o estandar)',
  PRIMARY KEY (`id_tipo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`pedido` ;

CREATE TABLE IF NOT EXISTS `gurama`.`pedido` (
  `id_pedido` INT(4) NOT NULL COMMENT 'identificado unico del pedido, ejemplo 0001',
  `fecha` DATETIME NOT NULL COMMENT 'Guarda la fecha y hora en la que se realizo el pedido',
  `estado` VARCHAR(20) NOT NULL COMMENT 'describe si esta pendiente o pagado ',
  `total` INT(5) NOT NULL COMMENT 'guarda el precio total de producto',
  `tipo_pedido_id_tipo` VARCHAR(4) NOT NULL COMMENT 'PK_FK realaciona el pedido con el tipo de pedido (personalizado o estandar)',
  `comprobante_id_comprobante` INT(6) NOT NULL COMMENT 'PK_FK relaciona a pedido con la tabla comprobante, que contiene elcomprobante de pago del pedido realizado',
  PRIMARY KEY (`id_pedido`, `tipo_pedido_id_tipo`, `comprobante_id_comprobante`),
  INDEX `fk_pedido_tipo_pedido1_idx` (`tipo_pedido_id_tipo` ASC) VISIBLE,
  INDEX `fk_pedido_comprobante1_idx` (`comprobante_id_comprobante` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_tipo_pedido1`
    FOREIGN KEY (`tipo_pedido_id_tipo`)
    REFERENCES `gurama`.`tipo_pedido` (`id_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_comprobante1`
    FOREIGN KEY (`comprobante_id_comprobante`)
    REFERENCES `gurama`.`comprobante` (`id_comprobante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`datalle_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`datalle_pedido` ;

CREATE TABLE IF NOT EXISTS `gurama`.`datalle_pedido` (
  `id_detalle` VARCHAR(4) NOT NULL COMMENT 'PK el valor unico del detalle del pedido',
  `descripcion` VARCHAR(30) NULL DEFAULT NULL COMMENT 'describe el tipo de pedido, si es estandar o personalizado',
  `pedido_id_pedido` INT(4) NOT NULL COMMENT 'PK_FK relaciona a la tabla de pedido con el/los detalle(s) del pedido.',
  PRIMARY KEY (`id_detalle`, `pedido_id_pedido`),
  INDEX `fk_datalle_pedido_pedido_idx` (`pedido_id_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_datalle_pedido_pedido`
    FOREIGN KEY (`pedido_id_pedido`)
    REFERENCES `gurama`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`estado_pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`estado_pago` ;

CREATE TABLE IF NOT EXISTS `gurama`.`estado_pago` (
  `id_estado` VARCHAR(3) NOT NULL COMMENT 'PK valor unico que define el estado de pago',
  `estado_pago` VARCHAR(10) NULL DEFAULT NULL COMMENT 'guarda si el estado de pago esta validando, rechazado o aceptado ',
  `comprobante_id_comprobante` INT(6) NOT NULL COMMENT 'FK relaciona el estado de pago con el comprobante del pago',
  PRIMARY KEY (`id_estado`),
  INDEX `fk_estado_pago_comprobante1_idx` (`comprobante_id_comprobante` ASC) VISIBLE,
  CONSTRAINT `fk_estado_pago_comprobante1`
    FOREIGN KEY (`comprobante_id_comprobante`)
    REFERENCES `gurama`.`comprobante` (`id_comprobante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`producto` ;

CREATE TABLE IF NOT EXISTS `gurama`.`producto` (
  `id_producto` VARCHAR(3) NOT NULL COMMENT 'PK identificador unico del producto ej P01',
  `producto` VARCHAR(20) NOT NULL COMMENT 'guarda el nombre del producto',
  `precio_unitario` INT(10) NOT NULL COMMENT 'precio del producto por unidad',
  `datalle_pedido_id_detalle` VARCHAR(4) NOT NULL COMMENT 'FK relaciona a la tabla del producto con el/los detalle(s) del pedido. para guardar los detalles de cada producto',
  PRIMARY KEY (`id_producto`),
  INDEX `fk_producto_datalle_pedido1_idx` (`datalle_pedido_id_detalle` ASC) VISIBLE,
  CONSTRAINT `fk_producto_datalle_pedido1`
    FOREIGN KEY (`datalle_pedido_id_detalle`)
    REFERENCES `gurama`.`datalle_pedido` (`id_detalle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`movimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`movimiento` ;

CREATE TABLE IF NOT EXISTS `gurama`.`movimiento` (
  `id_movimiento` VARCHAR(3) NOT NULL COMMENT 'PK valor unico de cada movimiento que se hace',
  `cantidad_m` INT(5) NOT NULL COMMENT 'almacena la cantidad de productos que realizan el movimiento',
  `fecha_m` DATETIME NOT NULL COMMENT 'guarda la fecha y hora en la que se realiza el movimiento',
  `observacion` VARCHAR(80) NULL DEFAULT NULL COMMENT 'espacio para escribir observaciones del movimiento (no es obligatorio)',
  `producto_id_producto` VARCHAR(3) NOT NULL COMMENT 'PK_FK relaciona que producto realiza el movimeinto. viene de la tabla producto',
  PRIMARY KEY (`id_movimiento`, `producto_id_producto`),
  INDEX `fk_movimiento_producto1_idx` (`producto_id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_movimiento_producto1`
    FOREIGN KEY (`producto_id_producto`)
    REFERENCES `gurama`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`mov_inventario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`mov_inventario` ;

CREATE TABLE IF NOT EXISTS `gurama`.`mov_inventario` (
  `id_m` VARCHAR(5) NULL DEFAULT NULL COMMENT 'PK identifica el movimiento realizado',
  `nom_movimiento` VARCHAR(11) NULL DEFAULT NULL COMMENT 'nombre del mobimiento, entrada o salida',
  `movimiento_id_movimiento` VARCHAR(3) NOT NULL COMMENT 'Relaciona los movimientos qie se han realizado con los movimientos del inventario',
  PRIMARY KEY (`movimiento_id_movimiento`),
  CONSTRAINT `fk_mov_inventario_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `gurama`.`movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`tipo_documento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`tipo_documento` ;

CREATE TABLE IF NOT EXISTS `gurama`.`tipo_documento` (
  `t_doc` VARCHAR(10) NOT NULL COMMENT 'PK código del tipo de documento (ej. CC, TI, CE).',
  `desc_doc` VARCHAR(20) NOT NULL COMMENT 'Descripción completa del tipo de documento (ej. cédula de ciudadanía). ',
  PRIMARY KEY (`t_doc`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `gurama`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gurama`.`usuario` ;

CREATE TABLE IF NOT EXISTS `gurama`.`usuario` (
  `id_usuario` VARCHAR(15) NOT NULL COMMENT 'PK Identificador único de la persona. Diferencia a cada cliente en el sistema.',
  `nom_1` VARCHAR(50) NOT NULL COMMENT 'Primer nombre de la persona. Campo obligatorio',
  `nom_2` VARCHAR(50) NULL DEFAULT NULL COMMENT 'Segundo nombre de la persona (opcional).',
  `ape_1` VARCHAR(50) NOT NULL COMMENT 'Primer apellido de la persona. Campo obligatorio',
  `ape_2` VARCHAR(50) NULL DEFAULT NULL COMMENT 'Segundo apelido de la persona (opcional).',
  `correo` VARCHAR(40) NOT NULL COMMENT 'guarda la direccion de correo electronico de la persona \"ejemplo@gmaill.com\", este dato es unico (el usuario solo puede tener un correo)',
  `telefono` BIGINT(10) NOT NULL COMMENT 'Teléfono de contacto de la persona',
  `tipo_documento_t_doc` VARCHAR(10) NOT NULL COMMENT 'PK_FK identifica el tipo de documento de un usuario ej: (CC, CE, TI)',
  `pedido_id_pedido` INT(4) NOT NULL COMMENT 'FK viene de la tabla pedido, relaciona que usuario realiza un pedido.',
  PRIMARY KEY (`id_usuario`, `tipo_documento_t_doc`),
  INDEX `fk_usuario_tipo_documento1_idx` (`tipo_documento_t_doc` ASC) VISIBLE,
  INDEX `fk_usuario_pedido1_idx` (`pedido_id_pedido` ASC) VISIBLE,
  UNIQUE INDEX `correo_UNIQUE` (`correo` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_tipo_documento1`
    FOREIGN KEY (`tipo_documento_t_doc`)
    REFERENCES `gurama`.`tipo_documento` (`t_doc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_pedido1`
    FOREIGN KEY (`pedido_id_pedido`)
    REFERENCES `gurama`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
